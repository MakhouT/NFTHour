{"ast":null,"code":"var _jsxFileName = \"/Users/makhout/Documents/Projects/happyhour/NFTHour/src/components/pages/Services.js\";\n// Get started by creating a new React\n// component and importing the libraries!\nimport React from \"react\";\nimport Unity, { UnityContent } from \"react-unity-webgl\";\nimport * as Web3 from 'web3';\nimport { OpenSeaPort, Network } from 'opensea-js';\nimport Web3Modal from \"web3modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Services extends React.Component {\n  constructor(props) {\n    super(props);\n    this.unityContent = new UnityContent('/Build/Build/jojo.json', '/Build/Build/UnityLoader.js');\n  }\n\n  previous() {\n    this.unityContent.send(\"GameManager\", \"Previous\");\n  }\n\n  next() {\n    this.unityContent.send(\"GameManager\", \"Next\");\n  }\n\n  async getKitties() {\n    // This example provider won't let you make transactions, only read-only calls:\n    const provider = new Web3.providers.HttpProvider('https://rinkeby.infura.io/v3/5bfc700d083f432bade6e389c661fc8f');\n    const seaport = new OpenSeaPort(provider, {\n      networkName: Network.Rinkeby\n    });\n    console.log(seaport);\n    const asset = {\n      tokenAddress: \"0x16baf0de678e52367adc69fd067e5edd1d33e3bf\",\n      // CryptoKitties\n      tokenId: \"5770\" // Token ID\n\n    };\n    const providerOptions = {\n      /* See Provider Options Section */\n    };\n    const web3Modal = new Web3Modal({\n      network: \"rinkeby\",\n      // optional\n      cacheProvider: true,\n      // optional\n      providerOptions // required\n\n    });\n    const providerWeb3 = await web3Modal.connect();\n    const web3 = new Web3(providerWeb3);\n    const address = web3.currentProvider.selectedAddress;\n    const balance = await seaport.getAssetBalance({\n      address,\n      asset\n    });\n    console.log('BALANCE', balance);\n    const ownsKitty = balance.greaterThan(0);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.previous.bind(this),\n        children: \"PREVIOUS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.next.bind(this),\n        children: \"NEXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.getKitties.bind(this),\n        children: \"Get Kitties\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Unity, {\n        unityContent: this.unityContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n} // import React, {useEffect, useState} from 'react';\n// import { Button } from '../Button';\n// import Unity, { UnityContent } from \"react-unity-webgl\";\n// import '../../App.css';\n// const unityContent = new UnityContent('../../../public/Build/Build/jojo.json', '../../../public/Build/Build/UnityLoader.js');\n// export default function Services() {\n//   // const [locked, setLocked] = useState('pending');\n//   // const unlockHandler = e => {\n//   //   setLocked(e.detail);\n//   // }\n//   // useEffect(() => {\n//   //   window.addEventListener(\"unlockProtocol\", unlockHandler);\n//   //   return window.removeEventListener(\"unlockProtocol\", unlockHandler);\n//   // }, []);\n//   // const unlock = () =>{\n//   //   window.unlockProtocol && window.unlockProtocol.loadCheckoutModal();\n//   // };\n//   // function spawnEnemies() {\n//   //   unityContent.send(\"GameController\", \"Next\");\n//   // }\n//   return (\n//     <>\n//       {/* <button onClick={spawnEnemies}>Spawn a bunch!</button> */}\n//       <Unity UnityContent={unityContent} />\n//     </>\n//     // <>\n//     //   <h1 className='services'>SERVICES\n//     //   <Button\n//     //       className='btns'\n//     //       buttonStyle='btn--primary'\n//     //       buttonSize='btn--large'\n//     //       onClick={unlock}\n//     //     >\n//     //       Unlock<i className='far fa-play-circle' />\n//     //   </Button>\n//     //   </h1>\n//     //   {locked === 'unlocked' && 'Im unlocked'}\n//     //   {locked !== 'unlocked' && <Button onClick={unlock}>Unlock</Button>}\n//     // </>\n//   );\n// }","map":{"version":3,"sources":["/Users/makhout/Documents/Projects/happyhour/NFTHour/src/components/pages/Services.js"],"names":["React","Unity","UnityContent","Web3","OpenSeaPort","Network","Web3Modal","Services","Component","constructor","props","unityContent","previous","send","next","getKitties","provider","providers","HttpProvider","seaport","networkName","Rinkeby","console","log","asset","tokenAddress","tokenId","providerOptions","web3Modal","network","cacheProvider","providerWeb3","connect","web3","address","currentProvider","selectedAddress","balance","getAssetBalance","ownsKitty","greaterThan","render","bind"],"mappings":"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","sourcesContent":["// Get started by creating a new React\n// component and importing the libraries!\n\nimport React from \"react\";\nimport Unity, { UnityContent } from \"react-unity-webgl\";\nimport * as Web3 from 'web3';\nimport { OpenSeaPort, Network } from 'opensea-js';\nimport Web3Modal from \"web3modal\";\n\nexport default class Services extends React.Component {\n  constructor(props) {\n    super(props);\n    this.unityContent = new UnityContent(\n      '/Build/Build/jojo.json', \n      '/Build/Build/UnityLoader.js'\n    );\n  }\n\n \n\n  previous() {\n    this.unityContent.send(\"GameManager\", \"Previous\");\n  }\n\n  next() {\n    this.unityContent.send(\"GameManager\", \"Next\");\n  }\n\n  async getKitties() {\n    // This example provider won't let you make transactions, only read-only calls:\n    const provider = new Web3.providers.HttpProvider('https://rinkeby.infura.io/v3/5bfc700d083f432bade6e389c661fc8f');\n\n    const seaport = new OpenSeaPort(provider, {\n      networkName: Network.Rinkeby\n    });\n\n    console.log(seaport);\n\n    const asset = {\n      tokenAddress: \"0x16baf0de678e52367adc69fd067e5edd1d33e3bf\", // CryptoKitties\n      tokenId: \"5770\", // Token ID\n    }\n\n    const providerOptions = {\n      /* See Provider Options Section */\n    };\n\n    const web3Modal = new Web3Modal({\n      network: \"rinkeby\", // optional\n      cacheProvider: true, // optional\n      providerOptions // required\n    });\n    \n    const providerWeb3 = await web3Modal.connect();\n    \n    const web3 = new Web3(providerWeb3);\n\n    const address = web3.currentProvider.selectedAddress;\n\n    const balance = await seaport.getAssetBalance({\n      address,\n      asset,\n    });\n\n    console.log('BALANCE', balance);\n\n    const ownsKitty = balance.greaterThan(0)\n    \n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.previous.bind(this)}>PREVIOUS</button>\n        <button onClick={this.next.bind(this)}>NEXT</button>\n        <button onClick={this.getKitties.bind(this)}>Get Kitties</button>\n        <Unity unityContent={this.unityContent} />\n      </div>\n    );\n  }\n}\n\n\n// import React, {useEffect, useState} from 'react';\n// import { Button } from '../Button';\n// import Unity, { UnityContent } from \"react-unity-webgl\";\n\n// import '../../App.css';\n\n// const unityContent = new UnityContent('../../../public/Build/Build/jojo.json', '../../../public/Build/Build/UnityLoader.js');\n\n// export default function Services() {\n//   // const [locked, setLocked] = useState('pending');\n\n//   // const unlockHandler = e => {\n//   //   setLocked(e.detail);\n//   // }\n\n//   // useEffect(() => {\n//   //   window.addEventListener(\"unlockProtocol\", unlockHandler);\n//   //   return window.removeEventListener(\"unlockProtocol\", unlockHandler);\n//   // }, []);\n\n//   // const unlock = () =>{\n//   //   window.unlockProtocol && window.unlockProtocol.loadCheckoutModal();\n//   // };\n\n//   // function spawnEnemies() {\n//   //   unityContent.send(\"GameController\", \"Next\");\n//   // }\n\n//   return (\n//     <>\n//       {/* <button onClick={spawnEnemies}>Spawn a bunch!</button> */}\n//       <Unity UnityContent={unityContent} />\n//     </>\n    \n//     // <>\n//     //   <h1 className='services'>SERVICES\n    \n//     //   <Button\n//     //       className='btns'\n//     //       buttonStyle='btn--primary'\n//     //       buttonSize='btn--large'\n//     //       onClick={unlock}\n//     //     >\n//     //       Unlock<i className='far fa-play-circle' />\n//     //   </Button>\n//     //   </h1>\n//     //   {locked === 'unlocked' && 'Im unlocked'}\n//     //   {locked !== 'unlocked' && <Button onClick={unlock}>Unlock</Button>}\n\n      \n//     // </>\n//   );\n// }"]},"metadata":{},"sourceType":"module"}