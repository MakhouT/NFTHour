{"ast":null,"code":"var _jsxFileName = \"/Users/lex/Documents/NFTHour/NFTHour/src/components/pages/Services.js\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport Unity, { UnityContent } from \"react-unity-webgl\";\nimport { Button } from '..Button';\nimport * as Web3 from 'web3';\nimport Web3Modal from \"web3modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Services extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: '',\n      nfts: []\n    };\n    this.unityContent = new UnityContent('/Build/Build/1.json', '/Build/Build/UnityLoader.js');\n  }\n\n  previous() {\n    this.unityContent.send(\"GameManager\", \"Previous\");\n  }\n\n  next() {\n    const availableBackgrounds = ['desert', 'city', 'suburbs', 'egypt', 'sea'];\n    const names = this.state.nfts.map(nft => nft.name);\n    const haveBackgrounds = availableBackgrounds.map(bg => names.includes(bg) ? '1' : '0').join('');\n    console.log(haveBackgrounds); // this.unityContent.send(\"GameManager\", \"Next\", this.state.nfts);\n\n    this.unityContent.send(\"GameManager\", \"UnlockWithString\", haveBackgrounds);\n  }\n\n  async getAddress() {\n    const providerOptions = {};\n    const web3Modal = new Web3Modal({\n      providerOptions\n    });\n    const providerWeb3 = await web3Modal.connect();\n    const web3 = new Web3(providerWeb3);\n    const address = web3.currentProvider.selectedAddress;\n    this.setState({\n      address\n    });\n    console.log(this.state);\n  }\n\n  async getNFTs() {\n    if (!this.state.address) {\n      await this.getAddress();\n    }\n\n    axios.get(`https://api.nftport.xyz/v0/accounts/${this.state.address}`, {\n      params: {\n        chain: 'polygon'\n      },\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': '4162f7a3-40f4-4f6b-8c8d-e735d3cc9590'\n      }\n    }).then(function (response) {\n      console.log(response);\n      this.setState({ ...this.state,\n        nfts: response.nfts\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"btns\",\n          buttonStyle: \"btn--outline\",\n          buttonSize: \"btn--large\",\n          onClick: this.next.bind(this),\n          children: \"GET NFTs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), \"//\", this.state.nfts.map(nft => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: nft.name\n        }, nft.token_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)), /*#__PURE__*/_jsxDEV(Unity, {\n          unityContent: this.unityContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n} // import React, {useEffect, useState} from 'react';\n// import { Button } from '../Button';\n// import Unity, { UnityContent } from \"react-unity-webgl\";\n// import '../../App.css';\n// const unityContent = new UnityContent('../../../public/Build/Build/jojo.json', '../../../public/Build/Build/UnityLoader.js');\n// export default function Services() {\n//   // const [locked, setLocked] = useState('pending');\n//   // const unlockHandler = e => {\n//   //   setLocked(e.detail);\n//   // }\n//   // useEffect(() => {\n//   //   window.addEventListener(\"unlockProtocol\", unlockHandler);\n//   //   return window.removeEventListener(\"unlockProtocol\", unlockHandler);\n//   // }, []);\n//   // const unlock = () =>{\n//   //   window.unlockProtocol && window.unlockProtocol.loadCheckoutModal();\n//   // };\n//   // function spawnEnemies() {\n//   //   unityContent.send(\"GameController\", \"Next\");\n//   // }\n//   return (\n//     <>\n//       {/* <button onClick={spawnEnemies}>Spawn a bunch!</button> */}\n//       <Unity UnityContent={unityContent} />\n//     </>\n//     // <>\n//     //   <h1 className='services'>SERVICES\n//     //   <Button\n//     //       className='btns'\n//     //       buttonStyle='btn--primary'\n//     //       buttonSize='btn--large'\n//     //       onClick={unlock}\n//     //     >\n//     //       Unlock<i className='far fa-play-circle' />\n//     //   </Button>\n//     //   </h1>\n//     //   {locked === 'unlocked' && 'Im unlocked'}\n//     //   {locked !== 'unlocked' && <Button onClick={unlock}>Unlock</Button>}\n//     // </>\n//   );\n// }","map":{"version":3,"sources":["/Users/lex/Documents/NFTHour/NFTHour/src/components/pages/Services.js"],"names":["axios","React","Unity","UnityContent","Button","Web3","Web3Modal","Services","Component","constructor","props","state","address","nfts","unityContent","previous","send","next","availableBackgrounds","names","map","nft","name","haveBackgrounds","bg","includes","join","console","log","getAddress","providerOptions","web3Modal","providerWeb3","connect","web3","currentProvider","selectedAddress","setState","getNFTs","get","params","chain","headers","then","response","catch","error","render","bind","token_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,YAAhB,QAAoC,mBAApC;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AACA,OAAOC,SAAP,MAAsB,WAAtB;;AACA,eAAe,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAKA,SAAKC,YAAL,GAAoB,IAAIX,YAAJ,CAClB,qBADkB,EAElB,6BAFkB,CAApB;AAID;;AAEDY,EAAAA,QAAQ,GAAG;AACT,SAAKD,YAAL,CAAkBE,IAAlB,CAAuB,aAAvB,EAAsC,UAAtC;AACD;;AAEDC,EAAAA,IAAI,GAAG;AACL,UAAMC,oBAAoB,GAAG,CAAC,QAAD,EAAW,MAAX,EAAmB,SAAnB,EAA8B,OAA9B,EAAuC,KAAvC,CAA7B;AACA,UAAMC,KAAK,GAAG,KAAKR,KAAL,CAAWE,IAAX,CAAgBO,GAAhB,CAAoBC,GAAG,IAAIA,GAAG,CAACC,IAA/B,CAAd;AACA,UAAMC,eAAe,GAAGL,oBAAoB,CAACE,GAArB,CAAyBI,EAAE,IAAIL,KAAK,CAACM,QAAN,CAAeD,EAAf,IAAqB,GAArB,GAA2B,GAA1D,EAA+DE,IAA/D,CAAoE,EAApE,CAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,eAAZ,EAJK,CAML;;AACA,SAAKT,YAAL,CAAkBE,IAAlB,CAAuB,aAAvB,EAAsC,kBAAtC,EAA0DO,eAA1D;AACD;;AAIe,QAAVM,UAAU,GAAG;AACjB,UAAMC,eAAe,GAAG,EAAxB;AAEA,UAAMC,SAAS,GAAG,IAAIzB,SAAJ,CAAc;AAC9BwB,MAAAA;AAD8B,KAAd,CAAlB;AAIA,UAAME,YAAY,GAAG,MAAMD,SAAS,CAACE,OAAV,EAA3B;AACA,UAAMC,IAAI,GAAG,IAAI7B,IAAJ,CAAS2B,YAAT,CAAb;AACA,UAAMpB,OAAO,GAAGsB,IAAI,CAACC,eAAL,CAAqBC,eAArC;AAEA,SAAKC,QAAL,CAAc;AAACzB,MAAAA;AAAD,KAAd;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAjB;AACD;;AAEY,QAAP2B,OAAO,GAAG;AACd,QAAG,CAAC,KAAK3B,KAAL,CAAWC,OAAf,EAAuB;AACrB,YAAM,KAAKiB,UAAL,EAAN;AACD;;AAED7B,IAAAA,KAAK,CAACuC,GAAN,CAAW,uCAAsC,KAAK5B,KAAL,CAAWC,OAAQ,EAApE,EAAuE;AACrE4B,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE;AADD,OAD6D;AAIrEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,yBAAiB;AAFV;AAJ4D,KAAvE,EAUCC,IAVD,CAUM,UAAUC,QAAV,EAAoB;AACxBjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAZ;AACA,WAAKP,QAAL,CAAc,EACZ,GAAG,KAAK1B,KADI;AAEZE,QAAAA,IAAI,EAAE+B,QAAQ,CAAC/B;AAFH,OAAd;AAKD,KAjBD,EAkBCgC,KAlBD,CAkBO,UAAUC,KAAV,EAAiB;AACtBnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ;AACD,KApBD;AAqBD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAA,gCACA,QAAC,MAAD;AACE,UAAA,SAAS,EAAC,MADZ;AAEE,UAAA,WAAW,EAAC,cAFd;AAGE,UAAA,UAAU,EAAC,YAHb;AAIE,UAAA,OAAO,EAAE,KAAK9B,IAAL,CAAU+B,IAAV,CAAe,IAAf,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,QAQC,KAAKrC,KAAL,CAAWE,IAAX,CAAgBO,GAAhB,CAAoBC,GAAG,iBACtB;AAAA,oBAAyBA,GAAG,CAACC;AAA7B,WAAUD,GAAG,CAAC4B,QAAd;AAAA;AAAA;AAAA;AAAA,gBADD,CARD,eAWA,QAAC,KAAD;AAAO,UAAA,YAAY,EAAE,KAAKnC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AA5FmD,C,CAgGtD;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport Unity, { UnityContent } from \"react-unity-webgl\";\nimport { Button } from '..Button';\nimport * as Web3 from 'web3';\nimport Web3Modal from \"web3modal\";\nexport default class Services extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      address: '',\n      nfts: [ ],\n    };\n\n    this.unityContent = new UnityContent(\n      '/Build/Build/1.json', \n      '/Build/Build/UnityLoader.js'\n    );\n  }\n\n  previous() {\n    this.unityContent.send(\"GameManager\", \"Previous\");\n  }\n\n  next() {\n    const availableBackgrounds = ['desert', 'city', 'suburbs', 'egypt', 'sea'];\n    const names = this.state.nfts.map(nft => nft.name);\n    const haveBackgrounds = availableBackgrounds.map(bg => names.includes(bg) ? '1' : '0').join('');\n    console.log(haveBackgrounds);\n \n    // this.unityContent.send(\"GameManager\", \"Next\", this.state.nfts);\n    this.unityContent.send(\"GameManager\", \"UnlockWithString\", haveBackgrounds);\n  }\n\n\n\n  async getAddress() {\n    const providerOptions = {};\n\n    const web3Modal = new Web3Modal({\n      providerOptions,\n    });\n    \n    const providerWeb3 = await web3Modal.connect();\n    const web3 = new Web3(providerWeb3);\n    const address = web3.currentProvider.selectedAddress;\n\n    this.setState({address});\n    console.log(this.state);\n  }\n\n  async getNFTs() {\n    if(!this.state.address){\n      await this.getAddress();\n    }\n\n    axios.get(`https://api.nftport.xyz/v0/accounts/${this.state.address}`, {\n      params: {\n        chain: 'polygon',\n      },\n      headers: {\n        'Content-Type': 'application/json', \n        'Authorization': '4162f7a3-40f4-4f6b-8c8d-e735d3cc9590'\n      },\n    })\n\n    .then(function (response) {\n      console.log(response);\n      this.setState({\n        ...this.state,\n        nfts: response.nfts\n\n      });\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>  \n        <Button \n          className='btns'\n          buttonStyle='btn--outline'\n          buttonSize='btn--large'\n          onClick={this.next.bind(this)}>GET NFTs\n         </Button>\n        //\n        {this.state.nfts.map(nft => (\n          <div key={nft.token_id}>{nft.name}</div>\n        ))}\n        <Unity unityContent={this.unityContent} />\n        </h1>  \n      </div>\n    );\n  }\n}\n\n\n// import React, {useEffect, useState} from 'react';\n// import { Button } from '../Button';\n// import Unity, { UnityContent } from \"react-unity-webgl\";\n\n// import '../../App.css';\n\n// const unityContent = new UnityContent('../../../public/Build/Build/jojo.json', '../../../public/Build/Build/UnityLoader.js');\n\n// export default function Services() {\n//   // const [locked, setLocked] = useState('pending');\n\n//   // const unlockHandler = e => {\n//   //   setLocked(e.detail);\n//   // }\n\n//   // useEffect(() => {\n//   //   window.addEventListener(\"unlockProtocol\", unlockHandler);\n//   //   return window.removeEventListener(\"unlockProtocol\", unlockHandler);\n//   // }, []);\n\n//   // const unlock = () =>{\n//   //   window.unlockProtocol && window.unlockProtocol.loadCheckoutModal();\n//   // };\n\n//   // function spawnEnemies() {\n//   //   unityContent.send(\"GameController\", \"Next\");\n//   // }\n\n//   return (\n//     <>\n//       {/* <button onClick={spawnEnemies}>Spawn a bunch!</button> */}\n//       <Unity UnityContent={unityContent} />\n//     </>\n    \n//     // <>\n//     //   <h1 className='services'>SERVICES\n    \n//     //   <Button\n//     //       className='btns'\n//     //       buttonStyle='btn--primary'\n//     //       buttonSize='btn--large'\n//     //       onClick={unlock}\n//     //     >\n//     //       Unlock<i className='far fa-play-circle' />\n//     //   </Button>\n//     //   </h1>\n//     //   {locked === 'unlocked' && 'Im unlocked'}\n//     //   {locked !== 'unlocked' && <Button onClick={unlock}>Unlock</Button>}\n\n      \n//     // </>\n//   );\n// }"]},"metadata":{},"sourceType":"module"}